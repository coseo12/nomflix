{"version":3,"sources":["assets/noPosterSmall.png","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api/index.js","routes/Home/index.js","routes/Home/HomeContainer.js","routes/Search/SearchPresenter.js","routes/Search/index.js","routes/Search/SearchContainer.js","routes/Tv/TvPresenter.js","routes/Tv/index.js","routes/Tv/TvContainer.js","components/Header.js","routes/Detail/DetailPresenter.js","routes/Detail/index.js","routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Error","propTypes","text","PropTypes","string","isRequired","Message","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","original_title","poster_path","key","vote_average","release_date","api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","type","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TvPresenter","airingToday","topRated","TvContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bdImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Imdb","ImdbLink","TabBar","TabBtn","Tab","TabBox","Logo","Box","Contents","DetailPresenter","result","tabChgEvent","backdrop_path","runtime","episode_run_time","genres","genre","index","name","href","imdb_id","overview","onClick","seasons","production_companies","item","logo_path","origin_country","production_countries","i","iso_3166_1","air_date","episode_count","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a35c37f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.ab682bd0.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${`${Image}`} {\n      opacity: 0.3;\n    }\n    ${`${Rating}`} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(`../assets/noPosterSmall.png`)\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired,\n};\n\nexport default Poster;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color={'#e73c3c'} text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n    language: process.env.REACT_APP_LANGUAGE,\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(`movie/now_playing`),\n  upcoming: () => api.get(`movie/upcoming`),\n  popular: () => api.get(`movie/popular`),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get(`search/movie`, {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(`tv/top_rated`),\n  popular: () => api.get(`tv/popular`),\n  airingToday: () => api.get(`tv/airing_today`),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get(`search/tv`, {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: `Can't find movies information.`,\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader';\nimport Section from 'components/Section';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  loading,\n  error,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"movies Results\">\n            {movieResults.map(movie => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Tv Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                key={show.id}\n                id={show.id}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color={'#e73c3c'} text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message color={'#95a5a6'} text={`Not found`} />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') this.searchByTerm();\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true,\n    });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch (error) {\n      this.setState({\n        error: `Can't find results.`,\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TvPresenter = ({ airingToday, topRated, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rate Shows\">\n            {topRated.map(show => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                key={show.id}\n                id={show.id}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                key={show.id}\n                id={show.id}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"AiringToday Shows\">\n            {airingToday.map(show => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                key={show.id}\n                id={show.id}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color={'#e73c3c'} text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTvPresenter.propTypes = {\n  airingToday: PropTypes.array,\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TvPresenter;\n","import TvContainer from './TvContainer';\n\nexport default TvContainer;\n","import React from 'react';\nimport TvPresenter from './TvPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      this.setState({\n        topRated,\n        airingToday,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: `Can't find Tv information.`,\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { airingToday, topRated, popular, error, loading } = this.state;\n    return (\n      <TvPresenter\n        airingToday={airingToday}\n        topRated={topRated}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Header = styled.header`\n  color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background: rgba(20, 20, 20, 0.8);\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: absolute;\n  padding: 15px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bdImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bdImage});\n  background-position: center center;\n  background-size: cover;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 50%;\n`;\n\nconst Imdb = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst ImdbLink = styled.a`\n  text-decoration: underline;\n  cursor: pointer;\n`;\nconst TabBar = styled.div`\n  margin-top: 20px;\n  margin-bottom: 0;\n  display: flex;\n`;\nconst TabBtn = styled.a`\n  margin: 0;\n  padding: 15px;\n  letter-spacing: 2;\n  font-weight: 500;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  background: #000;\n  cursor: pointer;\n`;\nconst Tab = styled.div`\n  padding-top: 20px;\n  background: #000;\n  height: 400px;\n  overflow: scroll;\n`;\nconst TabBox = styled.span`\n  overflow: scroll;\n`;\nconst Logo = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 400px;\n  height: 100px;\n  background: #fff;\n  background-image: url(${props => props.bdImage});\n  background-size: 400px 100px;\n  background-position: center;\n  margin: 10px 0;\n`;\nconst Poster = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 100px;\n  height: 100px;\n  background: #fff;\n  background-image: url(${props => props.bdImage});\n  background-size: 100px 100px;\n  background-position: center;\n  margin: 10px 0;\n`;\nconst Box = styled.div`\n  display: flex;\n`;\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 20px;\n`;\n\nconst DetailPresenter = ({ result, current, tabChgEvent, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bdImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bdImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Imdb>\n            <ImdbLink\n              href={`https://www.imdb.com/title/${result.imdb_id}/`}\n              target={`_blank`}\n            >\n              https://www.imdb.com/\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </ImdbLink>\n          </Imdb>\n          <Overview>{result.overview}</Overview>\n          <TabBar>\n            <TabBtn\n              current={current === '/Production'}\n              onClick={() => tabChgEvent('/Production')}\n            >\n              Production\n            </TabBtn>\n            <TabBtn\n              current={current === '/Countries'}\n              onClick={() => tabChgEvent('/Countries')}\n            >\n              Countries\n            </TabBtn>\n            {result.seasons && (\n              <TabBtn\n                current={current === '/Seasons'}\n                onClick={() => tabChgEvent('/Seasons')}\n              >\n                Seasons\n              </TabBtn>\n            )}\n          </TabBar>\n\n          <Tab>\n            {current === '/Production'\n              ? result.production_companies &&\n                result.production_companies.map(item => (\n                  <TabBox key={item.id}>\n                    <Box>\n                      <Logo\n                        bdImage={`https://image.tmdb.org/t/p/original${item.logo_path}`}\n                      />\n                      <Contents>\n                        <Item>production :{item.name}</Item>\n                        <Item>country: {item.origin_country}</Item>\n                      </Contents>\n                    </Box>\n                  </TabBox>\n                ))\n              : current === '/Countries'\n              ? result.production_countries &&\n                result.production_countries.map((item, i) => (\n                  <TabBox key={i}>\n                    <Contents>\n                      <Item>iso_3166_1: {item.iso_3166_1}</Item>\n                      <Item>name :{item.name}</Item>\n                    </Contents>\n                  </TabBox>\n                ))\n              : result.seasons &&\n                result.seasons.map(item => (\n                  <TabBox key={item.id}>\n                    <Box>\n                      <Poster\n                        bdImage={\n                          result.poster_path\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            : require('../../assets/noPosterSmall.png')\n                        }\n                      />\n                      <Contents>\n                        <Item>air_date: {item.air_date}</Item>\n                        <Item>episode_count :{item.episode_count}</Item>\n                        <Item>name: {item.name}</Item>\n                      </Contents>\n                    </Box>\n                  </TabBox>\n                ))}\n          </Tab>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      current: '/Production',\n      loading: true,\n      isMovie: pathname.includes('/movie'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) return push('/');\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n      console.log(result);\n      this.setState({\n        result,\n      });\n    } catch (error) {\n      this.setState({\n        error: `Can't find anything.`,\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  tabChgEvent = current => {\n    this.setState({\n      current,\n    });\n  };\n\n  render() {\n    const { result, current, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        current={current}\n        tabChgEvent={this.tabChgEvent}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Home from 'routes/Home';\nimport Search from 'routes/Search';\nimport TV from 'routes/Tv';\nimport Header from 'components/Header';\nimport Detail from 'routes/Detail';\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color:inherit\n    }\n    *{\n        box-sizing: border-box\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background: rgba(20,20,20,1);\n        color: #fff\n        ;padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'components/Router';\nimport GlobalStyles from 'components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}